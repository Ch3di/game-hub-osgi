package gamecenterguest;

import gamecenterserver.GameCenter;
import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.util.tracker.ServiceTracker;

public class Activator implements BundleActivator {
	private ServiceTracker gameCenterServerTracker;
	static BundleContext leContext;

	@Override
	public void start(BundleContext context) throws Exception {
		System.out.println("Client Started");
		gameCenterServerTracker = new ServiceTracker(context, GameCenter.class.getName(), null);
		achatVoitureTracker.open();
		AchatVoitureInterface achatVoiture = (AchatVoitureInterface) achatVoitureTracker.getService();

		if (achatVoiture == null) {
			System.out.println("\t Resultat de recherche service achat moteur : indisponible.");
			System.out.println("\t Achat voiture : invoke methode acheterMoteur(); avec echec.");
		} else {
			// le bon cas
			achatVoiture.acheterVoiture();
			System.out.println("\t Achat voiture : invoke acheterMoteur() avec succ√©s!");
		}

	}

	@Override
	public void stop(BundleContext context) throws Exception {
		System.out.println("Client Stopped");
	}

}
